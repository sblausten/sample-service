apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: teams-oauth-device-flow
  title: Teams Notification with Device Code OAuth
  description: Send Teams messages using device code authentication flow
spec:
  owner: platform-team
  type: service

  parameters:
    - title: Component Information
      required:
        - name
        - teamId
        - channelId
      properties:
        name:
          title: Component Name
          type: string
        teamId:
          title: Teams Team ID
          type: string
        channelId:
          title: Teams Channel ID
          type: string

  steps:
    # Step 1: Initiate OAuth device code flow
    - id: start-oauth
      name: Start OAuth Authentication
      action: http:backstage:request
      input:
        method: POST
        url: 'api/msgraph-proxy/oauth/device-code'
        headers:
          'Content-Type': 'application/json'
        body:
          scopes:
            - https://graph.microsoft.com/ChannelMessage.Send
            - https://graph.microsoft.com/Team.ReadBasic.All
            - https://graph.microsoft.com/Channel.ReadBasic.All

    # Step 2: Display authentication instructions
    - id: show-instructions
      name: Authentication Instructions
      action: debug:log
      input:
        message: |
          üîê OAuth Authentication Required:
          
          Please complete the following steps:
          1. Visit: ${{ steps.start-oauth.output.verification_uri }}
          2. Enter code: ${{ steps.start-oauth.output.user_code }}
          3. Sign in with your Microsoft account
          4. Consent to the requested permissions
          
          You have ${{ steps.start-oauth.output.expires_in }} seconds to complete authentication.
          The template will continue once you've authenticated...

    # Step 3: Poll for access token (with retry logic)
    - id: wait-for-auth-1
      name: Wait for Authentication (Attempt 1)
      action: http:backstage:request
      input:
        method: POST
        url: 'api/msgraph-proxy/oauth/token'
        headers:
          'Content-Type': 'application/json'
        body:
          device_code: ${{ steps.start-oauth.output.device_code }}

    # Step 4: Send Teams message with obtained token
    - id: send-teams-message
      name: Send Teams Notification
      action: http:backstage:request
      input:
        method: POST
        url: 'api/msgraph-proxy/api/teams/${{ parameters.teamId }}/channels/${{ parameters.channelId }}/messages'
        headers:
          'Authorization': 'Bearer ${{ steps.wait-for-auth-1.output.access_token }}'
          'Content-Type': 'application/json'
          'X-Required-Scopes': 'ChannelMessage.Send,Team.ReadBasic.All'
        body:
          body:
            content: |
              üéâ **Component Created with OAuth Authentication!**
              
              **Component:** ${{ parameters.name }}
              **Created by:** ${{ user.entity.metadata.name }}
              **Authentication:** Device Code Flow ‚úÖ
              
              This message was sent using user-delegated permissions!
            contentType: html

  output:
    message: 'Teams notification sent successfully with OAuth authentication!'